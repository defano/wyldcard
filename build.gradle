buildscript {
    dependencies {
        classpath 'io.github.fvarrui:javapackager:1.6.2'
        classpath "io.freefair.gradle:aspectj-plugin:6.3.0"
    }
}

plugins {
    id "org.sonarqube" version "2.6"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'antlr'
apply plugin: 'idea'
apply plugin: "jacoco"
apply plugin: 'org.sonarqube'
apply plugin: 'io.github.fvarrui.javapackager.plugin'

allprojects {
    apply plugin: 'java'

    if (project.hasProperty('threadAudit')) {
        apply plugin: "io.freefair.aspectj.post-compile-weaving"
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

ext {
    jdk = System.env.'JAVA_HOME'
    aspectjVersion = '1.8.13'
    weave = false
}

repositories {
    mavenCentral()
    mavenLocal()

    // Required for MaryTTS libraries
    maven {
        url "https://maven.scijava.org/content/repositories/public/"
    }
}

configurations {
    antlr
}

clean {
    delete 'generated-src/'
    delete 'bundles/'
    delete 'out/'
    delete 'log/'
    delete 'build/'
}

sourceSets {
    main.java.srcDirs += 'generated-src/main/java'
}

idea {
    module {
        sourceDirs += file('generated-src/main/java')
    }
}

dependencies {
    antlr 'org.antlr:antlr4:4.9.3'

    implementation 'com.defano.jmonet:jmonet:0.4.1'
    implementation 'com.defano.jsegue:jsegue:0.0.3'
    implementation 'com.intellij:javac2:7.0.3'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'org.bitbucket.cowwoc.diff-match-patch:diff-match-patch:1.0'
    implementation 'com.l2fprod.common:l2fprod-common-fontchooser:6.9.1'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'de.dfki.mary:voice-cmu-slt-hsmm:5.2'
    implementation 'de.dfki.mary:voice-cmu-bdl-hsmm:5.2'
    implementation 'de.dfki.mary:voice-cmu-rms-hsmm:5.2'
    implementation 'de.dfki.mary:voice-dfki-prudence-hsmm:5.2'
    implementation 'org.aspectj:aspectjrt:1.9.7'
    implementation 'com.fifesoft:rsyntaxtextarea:3.1.4'
    implementation 'com.fifesoft:autocomplete:3.1.3'
    implementation 'com.atlassian.commonmark:commonmark:0.17.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'gov.nist.math:jama:1.0.3'
    implementation 'com.google.inject:guice:5.0.1'
    implementation 'com.mycila.guice.extensions:mycila-guice-injection:5.0'
    implementation 'com.thoughtworks.xstream:xstream:1.4.18'
    implementation 'ch.qos.logback:logback-classic:1.2.9'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    testImplementation 'commons-io:commons-io:2.4'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {

    // Do not report code coverage on Antlr-generated classes
    afterEvaluate {
        //noinspection GroovyAssignabilityCheck
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'com/defano/hypertalk/parser/**',
                    'com/defano/wyldcard/window/layout/**',
                    'com/defano/wyldcard/util/FileDrop.*'
            ])
        }))
    }
}

sonarqube {
    properties {
        property "sonar.login", "$System.env.SONAR_KEY"
        property "sonar.branch.name", "$System.env.TRAVIS_BRANCH"

        property "sonar.projectKey", "wyldcard"
        property "sonar.organization", "defano-github"
        property "sonar.host.url", "https://sonarcloud.io"

        properties["sonar.exclusions"] += "generated-src/**/*"
        properties["sonar.exclusions"] += "src/main/java/com/defano/hypertalk/parser/**/*"
        properties["sonar.exclusions"] += "src/main/java/com/defano/wyldcard/window/layout/**/*"
        properties["sonar.exclusions"] += "src/main/java/com/defano/wyldcard/util/FileDrop.*"
    }
}

generateGrammarSource {
    outputDirectory = file("generated-src/main/java/")
    maxHeapSize = "64m"
    arguments += ["-long-messages", "-no-listener", "-visitor", "-package", "com.defano.hypertalk.parser"]
}

task generateBundle(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    mainClass = 'com.defano.wyldcard.WyldCard'
    bundleJre = true
    generateInstaller = true
    administratorRequired = false
    platform = 'auto'
}

mainClassName = "com.defano.wyldcard.WyldCard"
version = "1.0.0"
group = "com.defano.wyldcard"